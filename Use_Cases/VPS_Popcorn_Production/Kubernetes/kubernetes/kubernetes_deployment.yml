apiVersion: apps/v1
kind: Deployment
metadata:
  name: 0-api-cpps-controller
  labels:
    app: 0-api-cpps-controller
spec:
  replicas: 1
  selector:
    matchLabels:
      app: 0-api-cpps-controller
  template:
    metadata:
      labels:
        app: 0-api-cpps-controller
    spec:
      containers:
        - name: 0-api-cpps-controller
          image: koarch/vps_0_api_cpps_controller:0.11-amd64
          ports:
            - containerPort: 8000
---
apiVersion: v1
kind: Service
metadata:
  name: api-cpps-controller-service
spec:
  selector:
    app: 0-api-cpps-controller
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8000
      name: 0-api-cpps-controller
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: api-cpps-controller-ingress
  annotations:
    ingress.kubernetes.io/ssl-redirect: "false"
    kubernetes.io/ingress.class: "traefik"
    traefik.ingress.kubernetes.io/rule-type: "PathPrefixStrip"
    traefik.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
    - http:
        paths:
          - path: /cpps
            pathType: Exact
            backend:
              service:
                name: api-cpps-controller-service
                port:
                  number: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: 0-pc-cpps
  labels:
    app: 0-pc-cpps
spec:
  replicas: 1
  selector:
    matchLabels:
      app: 0-pc-cpps
  template:
    metadata:
      labels:
        app: 0-pc-cpps
    spec:
      containers:
        - name: 0-pc-cpps
          image: koarch/vps_0_pc_cpps:0.1-amd64
          env:
            - name: config_path
              value: "/etc/config/"
          volumeMounts:
            - name: general
              mountPath: /etc/config/general.yml
              subPath: general.yml
            - name: initial-design
              mountPath: /etc/config/initial-design.yml
              subPath: initial-design.yml
            - name: objective-function
              mountPath: /etc/config/objective-function.yml
              subPath: objective-function.yml
            - name: 0-pc-cpps
              mountPath: /etc/config/0-pc-cpps.yml
              subPath: 0-pc-cpps.yml
      volumes:
        - name: general
          configMap:
            name: vps-use-case
            items:
              - key: general.yml
                path: general.yml
        - name: initial-design
          configMap:
            name: vps-use-case
            items:
              - key: initial-design.yml
                path: initial-design.yml
        - name: objective-function
          configMap:
            name: vps-use-case
            items:
              - key: objective-function.yml
                path: objective-function.yml
        - name: 0-pc-cpps
          configMap:
            name: vps-use-case
            items:
              - key: 0-pc-cpps.yml
                path: 0-pc-cpps.yml

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: 1-pc-monitoring
  labels:
    app: 1-pc-monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: 1-pc-monitoring
  template:
    metadata:
      labels:
        app: 1-pc-monitoring
    spec:
      containers:
        - name: 1-pc-monitoring
          image: koarch/vps_1_pc_monitoring:0.1-amd64
          env:
            - name: config_path
              value: "/etc/config/"
          volumeMounts:
            - name: general
              mountPath: /etc/config/general.yml
              subPath: general.yml
            - name: 1-pc-monitoring
              mountPath: /etc/config/1-pc-monitoring.yml
              subPath: 1-pc-monitoring.yml
      volumes:
        - name: general
          configMap:
            name: vps-use-case
            items:
              - key: general.yml
                path: general.yml
        - name: 1-pc-monitoring
          configMap:
            name: vps-use-case
            items:
              - key: 1-pc-monitoring.yml
                path: 1-pc-monitoring.yml

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: 3-pc-evaluation
  labels:
    app: 3-pc-evaluation
spec:
  replicas: 1
  selector:
    matchLabels:
      app: 3-pc-evaluation
  template:
    metadata:
      labels:
        app: 3-pc-evaluation
    spec:
      containers:
        - name: 3-pc-evaluation
          image: koarch/vps_3_pc_evaluation:0.1-amd64
          env:
            - name: config_path
              value: "/etc/config/"
          volumeMounts:
            - name: general
              mountPath: /etc/config/general.yml
              subPath: general.yml
            - name: initial-design
              mountPath: /etc/config/initial-design.yml
              subPath: initial-design.yml
            - name: objective-function
              mountPath: /etc/config/objective-function.yml
              subPath: objective-function.yml
            - name: 3-pc-evaluation
              mountPath: /etc/config/3-pc-evaluation.yml
              subPath: 3-pc-evaluation.yml
      serviceAccountName: cognition
      volumes:
        - name: general
          configMap:
            name: vps-use-case
            items:
              - key: general.yml
                path: general.yml
        - name: initial-design
          configMap:
            name: vps-use-case
            items:
              - key: initial-design.yml
                path: initial-design.yml
        - name: objective-function
          configMap:
            name: vps-use-case
            items:
              - key: objective-function.yml
                path: objective-function.yml
        - name: 3-pc-evaluation
          configMap:
            name: vps-use-case
            items:
              - key: 3-pc-evaluation.yml
                path: 3-pc-evaluation.yml

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: 3-pc-simulation
spec:
  replicas: 1
  selector:
    matchLabels:
      app: 3-pc-simulation
  template:
    metadata:
      labels:
        app: 3-pc-simulation
    spec:
      containers:
        - name: 3-pc-simulation
          image: koarch/vps_3_pc_simulation:0.1-amd64
          env:
            - name: config_path
              value: "/etc/config/"
          volumeMounts:
            - name: general
              mountPath: /etc/config/general.yml
              subPath: general.yml
            - name: 3-pc-simulation
              mountPath: /etc/config/3-pc-simulation.yml
              subPath: 3-pc-simulation.yml
      volumes:
        - name: general
          configMap:
            name: vps-use-case
            items:
              - key: general.yml
                path: general.yml
        - name: 3-pc-simulation
          configMap:
            name: vps-use-case
            items:
              - key: 3-pc-simulation.yml
                path: 3-pc-simulation.yml

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: 4-pc-adaption
spec:
  replicas: 1
  selector:
    matchLabels:
      app: 4-pc-adaption
  template:
    metadata:
      labels:
        app: 4-pc-adaption
    spec:
      containers:
        - name: 4-pc-adaption
          image: koarch/vps_4_pc_adaption:0.1-amd64
          env:
            - name: config_path
              value: "/etc/config/"
          volumeMounts:
            - name: general
              mountPath: /etc/config/general.yml
              subPath: general.yml
            - name: 4-pc-adaption
              mountPath: /etc/config/4-pc-adaption.yml
              subPath: 4-pc-adaption.yml
      volumes:
        - name: general
          configMap:
            name: vps-use-case
            items:
              - key: general.yml
                path: general.yml
        - name: 4-pc-adaption
          configMap:
            name: vps-use-case
            items:
              - key: 4-pc-adaption.yml
                path: 4-pc-adaption.yml

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: 5-api-knowledge
  labels:
    app: 5-api-knowledge
spec:
  replicas: 1
  selector:
    matchLabels:
      app: 5-api-knowledge
  template:
    metadata:
      labels:
        app: 5-api-knowledge
    spec:
      containers:
        - name: 5-api-knowledge
          image: koarch/vps_5_api_knowledge:0.11-amd64
          ports:
            - containerPort: 8000

---
apiVersion: v1
kind: Service
metadata:
  name: api-knowledge-service
spec:
  selector:
    app: 5-api-knowledge
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8000
      name: 5-api-knowledge
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: api-knowledge-ingress
  annotations:
    ingress.kubernetes.io/ssl-redirect: "false"
    kubernetes.io/ingress.class: "traefik"
    traefik.ingress.kubernetes.io/rule-type: "PathPrefixStrip"
    traefik.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
    - http:
        paths:
          - path: /knowledge
            pathType: Exact
            backend:
              service:
                name: api-knowledge-service
                port:
                  number: 80
